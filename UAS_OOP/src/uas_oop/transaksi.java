/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package uas_oop;


import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Asus
 */
public class transaksi extends javax.swing.JFrame {

    /**
     * Creates new form transaksi
     */
    int selectedIdTransaksi = -1; 
    
    HashMap<String, Integer> mapPelanggan = new HashMap<>();
    HashMap<String, Integer> mapLayanan = new HashMap<>();
    HashMap<String, Integer> mapHargaLayanan = new HashMap<>();
    
  public transaksi() {
    initComponents();
    setLocationRelativeTo(null);
    
    isiComboPelanggan();
    isiComboLayanan();
    isiComboStatus();
    
    txBerat.addKeyListener(new KeyAdapter() {
        public void keyReleased(KeyEvent e) {
            hitungTotal();
        }
    });
    
    resetForm();
    
    setupComboLayananListener();
    tampilkanData();   
    modeTambah();
   
}

    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txBerat = new javax.swing.JTextField();
        txHarga = new javax.swing.JTextField();
        txTotalHarga = new javax.swing.JTextField();
        txTanggal = new javax.swing.JTextField();
        cbPelanggan = new javax.swing.JComboBox<>();
        cbLayanan = new javax.swing.JComboBox<>();
        cbStatus = new javax.swing.JComboBox<>();
        btnTambah = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnKembali = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbTransaksi = new javax.swing.JTable();
        txCariTransaksi = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        btnCariTransaksi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        jLabel1.setText("Form Input Transaksi ");

        jLabel3.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel3.setText("Nama Pelanggan");

        jLabel4.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel4.setText("Layanan");

        jLabel5.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel5.setText("Berat");

        jLabel6.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel6.setText("Harga");

        jLabel7.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel7.setText("Total Harga");

        jLabel8.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel8.setText("Tanggal");

        jLabel9.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel9.setText("Status");

        txBerat.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        txBerat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txBeratActionPerformed(evt);
            }
        });

        txHarga.setEditable(false);
        txHarga.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N

        txTotalHarga.setEditable(false);
        txTotalHarga.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N

        txTanggal.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        txTanggal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txTanggalActionPerformed(evt);
            }
        });

        cbPelanggan.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        cbPelanggan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPelangganActionPerformed(evt);
            }
        });

        cbLayanan.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        cbLayanan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbLayanan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbLayananActionPerformed(evt);
            }
        });

        cbStatus.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        cbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnTambah.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnReset.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnKembali.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        btnKembali.setText("Kembali");
        btnKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKembaliActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        jLabel10.setText("Data Transaksi");

        tbTransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbTransaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbTransaksiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbTransaksi);

        txCariTransaksi.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        txCariTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txCariTransaksiActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel11.setText("Cari Transaksi");

        btnCariTransaksi.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        btnCariTransaksi.setText("Cari");
        btnCariTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariTransaksiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbLayanan, 0, 424, Short.MAX_VALUE)
                    .addComponent(cbPelanggan, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txBerat)
                    .addComponent(txTotalHarga)
                    .addComponent(txHarga)
                    .addComponent(txTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnTambah)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnReset)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnKembali))
                    .addComponent(cbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txCariTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCariTransaksi)
                        .addGap(185, 185, 185))))
            .addGroup(layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addGap(170, 170, 170))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel10))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txCariTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(btnCariTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbLayanan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txBerat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txTotalHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnTambah)
                            .addComponent(btnUpdate)
                            .addComponent(btnReset)
                            .addComponent(btnKembali))
                        .addContainerGap(9, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txTanggalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txTanggalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txTanggalActionPerformed

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        try {
        int id_Pelanggan = mapPelanggan.get(cbPelanggan.getSelectedItem().toString());
        int id_Layanan = mapLayanan.get(cbLayanan.getSelectedItem().toString());
        double berat = Double.parseDouble(txBerat.getText());
        int total = Integer.parseInt(txTotalHarga.getText());
        String tanggal = txTanggal.getText();
        String status = cbStatus.getSelectedItem().toString();

        Connection con = dbkoneksi.koneksi();
        String sql = "INSERT INTO transaksi (id_pelanggan, id_layanan, berat, total_harga, tanggal, status) VALUES (?, ?, ?, ?, ?, ?)";
        PreparedStatement ps = con.prepareStatement(sql);
        ps.setInt(1, id_Pelanggan);
        ps.setInt(2, id_Layanan);
        ps.setDouble(3, berat);
        ps.setInt(4, total);
        ps.setString(5, tanggal);
        ps.setString(6, status);
        ps.executeUpdate();

        JOptionPane.showMessageDialog(this, "Data transaksi berhasil ditambahkan.");
        resetForm();
        tampilkanData();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Gagal tambah transaksi: " + e.getMessage());
    }
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
         resetForm();
    }//GEN-LAST:event_btnResetActionPerformed

    private void cbLayananActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbLayananActionPerformed
       
    }//GEN-LAST:event_cbLayananActionPerformed

    private void txBeratActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txBeratActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txBeratActionPerformed

    private void cbPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPelangganActionPerformed
     
    }//GEN-LAST:event_cbPelangganActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try {
        int id_Pelanggan = mapPelanggan.get(cbPelanggan.getSelectedItem().toString());
        int id_Layanan = mapLayanan.get(cbLayanan.getSelectedItem().toString());
        double berat = Double.parseDouble(txBerat.getText());
        int total = Integer.parseInt(txTotalHarga.getText());
        String tanggal = txTanggal.getText();
        String status = cbStatus.getSelectedItem().toString();

        Connection con = dbkoneksi.koneksi();
        String sql = "UPDATE transaksi SET id_pelanggan=?, id_layanan=?, berat=?, total_harga=?, tanggal=?, status=? WHERE id_transaksi=?";
        PreparedStatement ps = con.prepareStatement(sql);
        ps.setInt(1, id_Pelanggan);
        ps.setInt(2, id_Layanan);
        ps.setDouble(3, berat);
        ps.setInt(4, total);
        ps.setString(5, tanggal);
        ps.setString(6, status);
        ps.setInt(7, selectedIdTransaksi);
        ps.executeUpdate();

        JOptionPane.showMessageDialog(this, "Data transaksi berhasil diupdate.");
        resetForm();
        tampilkanData();

    } catch (SQLException ex) {
        Logger.getLogger(transaksi.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tbTransaksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbTransaksiMouseClicked
        int row = tbTransaksi.getSelectedRow();
        selectedIdTransaksi = Integer.parseInt(tbTransaksi.getValueAt(row, 0).toString());

        cbPelanggan.setSelectedItem(tbTransaksi.getValueAt(row, 1).toString());
        cbLayanan.setSelectedItem(tbTransaksi.getValueAt(row, 2).toString());
        txBerat.setText(tbTransaksi.getValueAt(row, 3).toString());
        txHarga.setText(tbTransaksi.getValueAt(row, 4).toString());
        txTotalHarga.setText(tbTransaksi.getValueAt(row, 5).toString());
        txTanggal.setText(tbTransaksi.getValueAt(row, 6).toString());
        cbStatus.setSelectedItem(tbTransaksi.getValueAt(row, 7).toString());
        
        modeUpdate();
        
        btnTambah.setEnabled(false);
        btnUpdate.setEnabled(true);
    }//GEN-LAST:event_tbTransaksiMouseClicked

    private void btnKembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKembaliActionPerformed
       this.dispose(); 
        new dashboard().setVisible(true); 
    }//GEN-LAST:event_btnKembaliActionPerformed

    private void txCariTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txCariTransaksiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txCariTransaksiActionPerformed

    private void btnCariTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariTransaksiActionPerformed
        cariTransaksi();
    }//GEN-LAST:event_btnCariTransaksiActionPerformed

    
    private void cariTransaksi() {
    DefaultTableModel model = (DefaultTableModel) tbTransaksi.getModel();
    model.setRowCount(0); 

    String keyword = txCariTransaksi.getText();

    try {
        Connection con = dbkoneksi.koneksi();
        String sql = "SELECT t.id_transaksi, p.nama AS pelanggan, l.nama_layanan, t.berat, l.harga_per_kg, t.total_harga, t.tanggal, t.status " +
                     "FROM transaksi t " +
                     "JOIN pelanggan p ON t.id_pelanggan = p.id_pelanggan " +
                     "JOIN layanan l ON t.id_layanan = l.id_layanan " +
                     "WHERE p.nama LIKE ?";
        PreparedStatement ps = con.prepareStatement(sql);
        ps.setString(1, "%" + keyword + "%");
        ResultSet rs = ps.executeQuery();

        while (rs.next()) {
            Object[] row = {
                rs.getInt("id_transaksi"),
                rs.getString("pelanggan"),
                rs.getString("nama_layanan"),
                rs.getDouble("berat"),
                rs.getInt("harga_per_kg"),
                rs.getInt("total_harga"),
                rs.getString("tanggal"),
                rs.getString("status")
            };
            model.addRow(row);
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal mencari transaksi: " + e.getMessage());
    }
}

    
    private void resetForm() {
    if (cbPelanggan.getItemCount() > 0) cbPelanggan.setSelectedIndex(0);
    if (cbLayanan.getItemCount() > 0) cbLayanan.setSelectedIndex(0);
    if (cbStatus.getItemCount() > 0) cbStatus.setSelectedIndex(0);
    
        txBerat.setText("");
        txHarga.setText("");
        txTotalHarga.setText("");
        txTanggal.setText("");
        cbStatus.setSelectedIndex(0);

        btnTambah.setEnabled(true);
        btnUpdate.setEnabled(false);
        
        modeTambah();
}
    private void modeTambah() {
        btnTambah.setEnabled(true);
        btnUpdate.setEnabled(false);
        btnReset.setEnabled(true);
}
    private void modeUpdate() {
        btnTambah.setEnabled(false);
        btnUpdate.setEnabled(true);
        btnReset.setEnabled(true);
}


    private void hitungTotal() {
    try {
        String layanan = cbLayanan.getSelectedItem().toString();
        int harga = mapHargaLayanan.get(layanan);
        double berat = Double.parseDouble(txBerat.getText());
        int total = (int)(harga * berat);
        txTotalHarga.setText(String.valueOf(total));
    } catch (Exception e) {
        txTotalHarga.setText("");
    }
}
    private void tampilkanData() {
    DefaultTableModel model = (DefaultTableModel) tbTransaksi.getModel();
    model.setRowCount(0); 

    model.setColumnIdentifiers(new String[]{
        "ID", "Nama Pelanggan", "Layanan", "Berat", "Harga/Kg", "Total Harga", "Tanggal", "Status"
    });

    try {
        Connection con = dbkoneksi.koneksi();
        String sql = "SELECT t.id_transaksi, p.nama AS pelanggan, l.nama_layanan, t.berat, l.harga_per_kg, t.total_harga, t.tanggal, t.status " +
                     "FROM transaksi t " +
                     "JOIN pelanggan p ON t.id_pelanggan = p.id_pelanggan " +
                     "JOIN layanan l ON t.id_layanan = l.id_layanan";
        PreparedStatement ps = con.prepareStatement(sql);
        ResultSet rs = ps.executeQuery();

        while (rs.next()) {
            Object[] row = new Object[8];
            row[0] = rs.getInt("id_transaksi");
            row[1] = rs.getString("pelanggan");
            row[2] = rs.getString("nama_layanan");
            row[3] = rs.getDouble("berat");
            row[4] = rs.getInt("harga_per_kg");
            row[5] = rs.getInt("total_harga");
            row[6] = rs.getString("tanggal");
            row[7] = rs.getString("status");

            model.addRow(row); 
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal menampilkan data: " + e.getMessage());
    }
}

    
    private void isiComboPelanggan() {
    cbPelanggan.removeAllItems(); 
    mapPelanggan.clear();         

    try {
        Connection con = dbkoneksi.koneksi();
        String sql = "SELECT * FROM pelanggan";
        PreparedStatement ps = con.prepareStatement(sql);
        ResultSet rs = ps.executeQuery();

        while (rs.next()) {
            String nama = rs.getString("nama");
            int id = rs.getInt("id_pelanggan");

            cbPelanggan.addItem(nama);
            mapPelanggan.put(nama, id);
        }

        con.close();
    } catch (SQLException ex) {
        Logger.getLogger(transaksi.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, "Gagal mengisi pelanggan: " + ex.getMessage());
    }
}
    private void isiComboLayanan() {
    cbLayanan.removeAllItems();     
    mapLayanan.clear();            
    mapHargaLayanan.clear();

    try {
        Connection con = dbkoneksi.koneksi();
        String sql = "SELECT * FROM layanan";
        PreparedStatement ps = con.prepareStatement(sql);
        ResultSet rs = ps.executeQuery();

        while (rs.next()) {
            String nama = rs.getString("nama_layanan");
            int id = rs.getInt("id_layanan");
            int harga = rs.getInt("harga_per_kg");

            cbLayanan.addItem(nama);
            mapLayanan.put(nama, id);
            mapHargaLayanan.put(nama, harga);
        }

        con.close();
    } catch (SQLException ex) {
        Logger.getLogger(transaksi.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, "Gagal mengisi layanan: " + ex.getMessage());
    }
}

    private void isiComboStatus() {
    cbStatus.removeAllItems();
    cbStatus.addItem("Proses");
    cbStatus.addItem("Selesai");
}

    
    private void setupComboLayananListener() {
    cbLayanan.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            String selected = cbLayanan.getSelectedItem().toString();
            int harga = mapHargaLayanan.get(selected);
            txHarga.setText(String.valueOf(harga));
            hitungTotal(); 
        }
    });  

}
   

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new transaksi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCariTransaksi;
    private javax.swing.JButton btnKembali;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnTambah;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbLayanan;
    private javax.swing.JComboBox<String> cbPelanggan;
    private javax.swing.JComboBox<String> cbStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbTransaksi;
    private javax.swing.JTextField txBerat;
    private javax.swing.JTextField txCariTransaksi;
    private javax.swing.JTextField txHarga;
    private javax.swing.JTextField txTanggal;
    private javax.swing.JTextField txTotalHarga;
    // End of variables declaration//GEN-END:variables
}
